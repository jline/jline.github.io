"use strict";(self.webpackChunkjline_docs=self.webpackChunkjline_docs||[]).push([[3976],{7879:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"intro","title":"Getting Started with JLine","description":"JLine is a Java library that brings advanced console input handling capabilities to your applications. It provides functionality similar to BSD editline and GNU readline, while offering additional features that rival the sophisticated ZSH line editor.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/jline/jline.github.io/edit/main/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Terminal Handling","permalink":"/docs/terminal"}}');var r=i(4848),a=i(8453);const l={sidebar_position:1},d="Getting Started with JLine",s={},o=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Maven Dependency",id:"maven-dependency",level:3},{value:"Gradle Dependency",id:"gradle-dependency",level:3},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"getting-started-with-jline",children:"Getting Started with JLine"})}),"\n",(0,r.jsx)(n.p,{children:"JLine is a Java library that brings advanced console input handling capabilities to your applications. It provides functionality similar to BSD editline and GNU readline, while offering additional features that rival the sophisticated ZSH line editor."}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"JLine enhances your command-line applications with:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Rich command-line editing capabilities"}),"\n",(0,r.jsx)(n.li,{children:"Customizable tab completion"}),"\n",(0,r.jsx)(n.li,{children:"History management with search"}),"\n",(0,r.jsx)(n.li,{children:"Syntax highlighting"}),"\n",(0,r.jsx)(n.li,{children:"Multi-line editing"}),"\n",(0,r.jsx)(n.li,{children:"Unicode support"}),"\n",(0,r.jsx)(n.li,{children:"Platform-independent implementation"}),"\n",(0,r.jsx)(n.li,{children:"Flexible keyboard mapping"}),"\n",(0,r.jsx)(n.li,{children:"Advanced line editing features (cut/paste, word movement, etc.)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.h3,{id:"maven-dependency",children:"Maven Dependency"}),"\n",(0,r.jsx)(n.p,{children:"Add JLine to your project using Maven:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>org.jline</groupId>\n    <artifactId>jline</artifactId>\n    <version>3.25.0</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"gradle-dependency",children:"Gradle Dependency"}),"\n",(0,r.jsx)(n.p,{children:"Or if you're using Gradle:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-groovy",children:"implementation 'org.jline:jline:3.25.0'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.p,{children:"Here's a simple example to get you started with JLine:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="JLineExample.java" showLineNumbers',children:'import org.jline.reader.LineReader;\nimport org.jline.reader.LineReaderBuilder;\nimport org.jline.terminal.Terminal;\nimport org.jline.terminal.TerminalBuilder;\n\nimport java.io.IOException;\n\npublic class JLineExample {\n    public static void main(String[] args) {\n        try {\n            // highlight-start\n            // Setup the terminal\n            Terminal terminal = TerminalBuilder.builder()\n                    .system(true)\n                    .build();\n\n            // Create the line reader\n            LineReader lineReader = LineReaderBuilder.builder()\n                    .terminal(terminal)\n                    .build();\n            // highlight-end\n\n            // Read a line\n            String line = lineReader.readLine("JLine > ");\n            System.out.println("You entered: " + line);\n\n        } catch (IOException e) {\n            System.err.println("Error creating terminal: " + e.getMessage());\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This simple example demonstrates how to:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Create a terminal instance"}),"\n",(0,r.jsx)(n.li,{children:"Build a line reader"}),"\n",(0,r.jsx)(n.li,{children:"Read input from the user with a custom prompt"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Explore the documentation to learn more about JLine's advanced features:"})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>d});var t=i(6540);const r={},a=t.createContext(r);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);